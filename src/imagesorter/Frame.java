/*
 * Frame.java
 *
 * Created on den 8 juni 2008, 11:47
 */

package imagesorter;

/**
 *
 * @author  jonas
 */
public class Frame extends javax.swing.JFrame {
 
    /** Creates new form Frame */
    public Frame() {
        this.setTitle("Sort Image 0.1.1-alpha!");
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        chkRecursive = new javax.swing.JCheckBox();
        chkMoveInsteadOfCopy = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();
        btnStartImport = new javax.swing.JButton();
        cmbDestinationFolderName = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cmbDestinationFileName = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        txtImportFromFolder = new javax.swing.JTextField();
        btnChooseImportFromFolder = new javax.swing.JButton();
        txtImportToFolder = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        mnuFileExit = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        mnuHelpAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Import from folder:");

        jLabel2.setText("Import to this folder:");

        chkRecursive.setSelected(true);
        chkRecursive.setText("Recursive search");

        chkMoveInsteadOfCopy.setText("Move instead of copy");
        chkMoveInsteadOfCopy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkMoveInsteadOfCopyActionPerformed(evt);
            }
        });

        btnStartImport.setText("Start import");
        btnStartImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartImportActionPerformed(evt);
            }
        });

        cmbDestinationFolderName.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbDestinationFolderName.setEnabled(false);

        jLabel3.setText("Naming of destinationfolder:");

        jLabel4.setText("Naming of destination file:");

        cmbDestinationFileName.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbDestinationFileName.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24));
        jLabel5.setText("Sort Image");

        btnChooseImportFromFolder.setText("...");
        btnChooseImportFromFolder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseImportFromFolderActionPerformed(evt);
            }
        });

        jButton2.setText("...");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jMenu2.setText("File");

        mnuFileExit.setText("Exit");
        mnuFileExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFileExitActionPerformed(evt);
            }
        });
        jMenu2.add(mnuFileExit);

        jMenuBar1.add(jMenu2);

        jMenu1.setText("Help");

        mnuHelpAbout.setText("About");
        mnuHelpAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuHelpAboutActionPerformed(evt);
            }
        });
        jMenu1.add(mnuHelpAbout);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 574, Short.MAX_VALUE)
                    .addComponent(chkRecursive)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 574, Short.MAX_VALUE)
                    .addComponent(btnStartImport, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(149, 149, 149))
                            .addComponent(chkMoveInsteadOfCopy, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
                            .addComponent(jLabel3)
                            .addComponent(cmbDestinationFolderName, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtImportFromFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnChooseImportFromFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(cmbDestinationFileName, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtImportToFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtImportFromFolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnChooseImportFromFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtImportToFolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(14, 14, 14)
                .addComponent(chkRecursive)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkMoveInsteadOfCopy)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbDestinationFolderName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbDestinationFileName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnStartImport)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void chkMoveInsteadOfCopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkMoveInsteadOfCopyActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_chkMoveInsteadOfCopyActionPerformed

private void btnChooseImportFromFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseImportFromFolderActionPerformed
    String homedir = System.getProperty("user.home");
    javax.swing.JFileChooser ifc = new javax.swing.JFileChooser();
    ifc.setCurrentDirectory(new java.io.File(homedir));
    ifc.setDialogTitle("Import from this folder");
    ifc.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);
    ifc.setAcceptAllFileFilterUsed(false);

    if( ifc.showOpenDialog(this) == javax.swing.JFileChooser.APPROVE_OPTION) {
        txtImportFromFolder.setText( ifc.getSelectedFile().toString() );
    }
        
}//GEN-LAST:event_btnChooseImportFromFolderActionPerformed

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

    String homedir = System.getProperty("user.home");
    javax.swing.JFileChooser ifc = new javax.swing.JFileChooser();
    ifc.setCurrentDirectory(new java.io.File(homedir));
    ifc.setDialogTitle("Import to this folder");
    ifc.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);
    ifc.setAcceptAllFileFilterUsed(false);

    if( ifc.showOpenDialog(this) == javax.swing.JFileChooser.APPROVE_OPTION) {
        txtImportToFolder.setText( ifc.getSelectedFile().toString() );
    }

}//GEN-LAST:event_jButton2ActionPerformed

private void btnStartImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartImportActionPerformed
    
    // TODO: Error handling!
    
    SortImage si = new SortImage();
    si.setSearchDir( txtImportFromFolder.getText() );
    si.setDestinationDir( txtImportToFolder.getText() );
    si.setRecursiveSearch(chkRecursive.isSelected());
    si.setMoveFiles(chkMoveInsteadOfCopy.isSelected());
    si.sortImages();
    
    
    
}//GEN-LAST:event_btnStartImportActionPerformed

private void mnuFileExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFileExitActionPerformed
    System.out.println("Du vill avsluta?");
    // TODO: Shutdown cleaning/saving code.
    dispose();
    System.exit(0);
}//GEN-LAST:event_mnuFileExitActionPerformed

private void mnuHelpAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuHelpAboutActionPerformed
    AboutDialog ad = new AboutDialog(new javax.swing.JFrame(), true);
    ad.setVisible(true);
}//GEN-LAST:event_mnuHelpAboutActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChooseImportFromFolder;
    private javax.swing.JButton btnStartImport;
    private javax.swing.JCheckBox chkMoveInsteadOfCopy;
    private javax.swing.JCheckBox chkRecursive;
    private javax.swing.JComboBox cmbDestinationFileName;
    private javax.swing.JComboBox cmbDestinationFolderName;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JMenuItem mnuFileExit;
    private javax.swing.JMenuItem mnuHelpAbout;
    private javax.swing.JTextField txtImportFromFolder;
    private javax.swing.JTextField txtImportToFolder;
    // End of variables declaration//GEN-END:variables

}
